[metadata]
name = processrunner
description = Easily trigger and manage output from external processes.
long_description = file: README.rst
url = https://github.com/arobb/python-processrunner
author = Andy Robb
author_email = andy@andyrobb.com
license = MIT
keywords = external process execution
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Topic :: Utilities
    License :: OSI Approved :: MIT License
    Operating System :: POSIX
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[options]
package_dir=
    =src
packages = find:
setup_requires =
  setuptools_scm
install_requires =
    future
    kitchen
    deprecated
    funcsigs
    enum34;python_version<'3.4'

[options.extras_require]
dev =
    argparse
    check-manifest
    pylama
    pytest-cov
test =
    argparse
    mock
    parameterized
    pygments
    pytest
    pytest-cov
    tox

[options.packages.find]
where=src
include=processrunner

[tox:tox]
envlist = clean,py27,py37,py38,py39,report,pylint,bandit
isolated_build = True

[testenv]
platform = linux2|darwin
setenv =
    PIP_TRUSTED_HOST = 192.168.11.14
    PIP_INDEX_URL = http://192.168.11.14:3141/root/pypi/+simple/
commands =
    pytest \
    --basetemp="{envtmpdir}" \
    --confcutdir=.. \
    --numprocesses auto \
    --cov \
    --cov-append \
    --cov-report term-missing \
    --cov-report xml \
    {posargs:-vv}
extras = test
deps =
    pytest
    pytest-cov
    pytest-xdist
depends =
    {py27,py37,py38,py39}: clean
    report: py27,py37,py38,py39

[testenv:report]
skip_install = true
deps = coverage
commands =
    - coverage combine
    coverage html
    coverage xml
    coverage report

[testenv:clean]
deps = coverage
commands = coverage erase

[coverage:run]
source = src/processrunner
omit = tests/*,.tox/*
concurrency = multiprocessing
data_file = coverage/coverage
parallel = True

[coverage:html]
directory = coverage/html

[coverage:xml]
output = coverage/xml/coverage.xml

[testenv:pylint]
deps = pylint
commands =
    - pylint src/processrunner

[pylint.BASIC]
good-names=
    i,
    id,

[pylint.'MESSAGES CONTROL']
disable=
    useless-object-inheritance,
    too-many-instance-attributes,
    too-many-public-methods,
    too-many-arguments,
    duplicate-code,
    raise-missing-from,

[testenv:bandit]
deps = bandit
commands =
    bandit -r src

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
basepython = python3.7
deps =
    sphinx
    sphinx-rtd-theme==0.5
    autoclasstoc==1.2
commands = sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_build" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_build" / "index.html"))'
